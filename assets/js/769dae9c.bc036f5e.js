"use strict";(self.webpackChunkmy_docusaurus_site=self.webpackChunkmy_docusaurus_site||[]).push([[4389],{3215:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"guide/Python_Basics/Dictionaries","title":"Dictionary","description":"In Python, dictionaries provide a convenient way to store data using a key-value pair structure. This part introduces you to the basics of dictionaries and includes code snippets with examples.","source":"@site/docs/guide/01_Python_Basics/19_Dictionaries.md","sourceDirName":"guide/01_Python_Basics","slug":"/guide/Python_Basics/Dictionaries","permalink":"/Python/docs/guide/Python_Basics/Dictionaries","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guide/01_Python_Basics/19_Dictionaries.md","tags":[],"version":"current","sidebarPosition":19,"frontMatter":{},"sidebar":"guideSidebar","previous":{"title":"Frozen Sets","permalink":"/Python/docs/guide/Python_Basics/Frozensets"},"next":{"title":"None Type in Python","permalink":"/Python/docs/guide/Python_Basics/None"}}');var s=i(4848),a=i(8453);const r={},c="Dictionary",d={},o=[{value:"Creating a Dictionary",id:"creating-a-dictionary",level:2},{value:"Accessing Elements",id:"accessing-elements",level:2},{value:"Nested Dictionaries",id:"nested-dictionaries",level:2},{value:"Modifying and Deleting Elements",id:"modifying-and-deleting-elements",level:2},{value:"Adding a new element:",id:"adding-a-new-element",level:3},{value:"Modifying an element:",id:"modifying-an-element",level:3},{value:"Deleting an element:",id:"deleting-an-element",level:3},{value:"Clearing the entire dictionary:",id:"clearing-the-entire-dictionary",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"dictionary",children:"Dictionary"})}),"\n",(0,s.jsx)(n.p,{children:"In Python, dictionaries provide a convenient way to store data using a key-value pair structure. This part introduces you to the basics of dictionaries and includes code snippets with examples."}),"\n",(0,s.jsx)(n.h2,{id:"creating-a-dictionary",children:"Creating a Dictionary"}),"\n",(0,s.jsxs)(n.p,{children:["To create a dictionary, use curly brackets ",(0,s.jsx)(n.code,{children:"{}"})," and insert key-value pairs separated by commas. Here's an example with user data:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"users = {\n    'Bob': 1,\n    'Luigi': 2\n}\nprint(users)  # Output: {'Bob': 1, 'Luigi': 2}\n"})}),"\n",(0,s.jsx)(n.p,{children:"You can create an empty dictionary by using empty curly brackets."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"empty_dict = {}\nprint(empty_dict)  # Output: {}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"accessing-elements",children:"Accessing Elements"}),"\n",(0,s.jsx)(n.p,{children:"To retrieve a value, refer to the key using square brackets. For example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"print(users['Luigi'])  # Output: 2\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Attempting to access a non-existing key will result in a ",(0,s.jsx)(n.code,{children:"KeyError"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"nested-dictionaries",children:"Nested Dictionaries"}),"\n",(0,s.jsx)(n.p,{children:"Dictionaries can be nested. Here's an example with weather data:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"weather_data = {\n    'time': 12,\n    'weather': {\n        'morning': 'rain',\n        'evening': 'more rain'\n    }\n}\nprint(weather_data['time'])                    # Output: 12\nprint(weather_data['weather']['morning'])      # Output: rain\n"})}),"\n",(0,s.jsx)(n.h2,{id:"modifying-and-deleting-elements",children:"Modifying and Deleting Elements"}),"\n",(0,s.jsx)(n.p,{children:"You can add, modify, or delete key-value pairs in a dictionary."}),"\n",(0,s.jsx)(n.h3,{id:"adding-a-new-element",children:"Adding a new element:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"users[3] = 'Mario'\nprint(users)  # Output: {'Bob': 1, 'Luigi': 2, 3: 'Mario'}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"modifying-an-element",children:"Modifying an element:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"users[1] = 'James'\nprint(users)  # Output: {'James': 1, 'Luigi': 2, 3: 'Mario'}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"deleting-an-element",children:"Deleting an element:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"users.pop(2)\nprint(users)  # Output: {'James': 1, 3: 'Mario'}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Alternatively:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"del users[2]\nprint(users)  # Output: {'James': 1, 3: 'Mario'}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"clearing-the-entire-dictionary",children:"Clearing the entire dictionary:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"users.clear()\nprint(users)  # Output: {}\n"})}),"\n",(0,s.jsx)(n.p,{children:"These basic operations should give you a good start with Python dictionaries. As you progress, you'll discover more advanced use cases and applications for this versatile data structure. Happy coding!"})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var t=i(6540);const s={},a=t.createContext(s);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);