"use strict";(self.webpackChunkmy_docusaurus_site=self.webpackChunkmy_docusaurus_site||[]).push([[6576],{2589:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"data-analysis/Data_Frames/nlargest-nsmallest","title":"Sorting Data","description":"In this tutorial, we\'ll explore how to efficiently sort data in a Pandas DataFrame using the nlargest and nsmallest functions. These functions are particularly useful when you need to identify the largest or smallest values in a DataFrame based on one or multiple columns.","source":"@site/docs/data-analysis/02_Data_Frames/04_nlargest-nsmallest.md","sourceDirName":"data-analysis/02_Data_Frames","slug":"/data-analysis/Data_Frames/nlargest-nsmallest","permalink":"/Python/docs/data-analysis/Data_Frames/nlargest-nsmallest","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/data-analysis/02_Data_Frames/04_nlargest-nsmallest.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"dataAnalysisSidebar","previous":{"title":"Retrieving Useful Information from Data Frames","permalink":"/Python/docs/data-analysis/Data_Frames/descripe-info"},"next":{"title":"Modifying DataFrame Index","permalink":"/Python/docs/data-analysis/Data_Frames/set_index-reset_index"}}');var a=t(4848),l=t(8453);const r={},i="Sorting Data",o={},d=[{value:"1. Importing Necessary Libraries and Loading Data",id:"1-importing-necessary-libraries-and-loading-data",level:2},{value:"2. Sorting with <code>nlargest</code>",id:"2-sorting-with-nlargest",level:2},{value:"2.1 Sorting by a Single Column",id:"21-sorting-by-a-single-column",level:3},{value:"2.2 Sorting by Multiple Columns",id:"22-sorting-by-multiple-columns",level:3},{value:"3. Sorting with <code>nsmallest</code>",id:"3-sorting-with-nsmallest",level:2},{value:"4. Handling Duplicates with the <code>keep</code> Parameter",id:"4-handling-duplicates-with-the-keep-parameter",level:2},{value:"5. Using <code>sort_values</code> as an Alternative",id:"5-using-sort_values-as-an-alternative",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"sorting-data",children:"Sorting Data"})}),"\n",(0,a.jsxs)(n.p,{children:["In this tutorial, we'll explore how to efficiently sort data in a Pandas DataFrame using the ",(0,a.jsx)(n.code,{children:"nlargest"})," and ",(0,a.jsx)(n.code,{children:"nsmallest"})," functions. These functions are particularly useful when you need to identify the largest or smallest values in a DataFrame based on one or multiple columns."]}),"\n",(0,a.jsx)(n.h2,{id:"1-importing-necessary-libraries-and-loading-data",children:"1. Importing Necessary Libraries and Loading Data"}),"\n",(0,a.jsx)(n.p,{children:"First, let's import the Pandas library and load our dataset. We'll specify the columns we're interested in, which are the series title, rating, and the number of votes."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import pandas as pd\n\n# Define columns of interest\ncolumns = ['title', 'rating', 'num_votes']\n\n# Load dataset\ndf = pd.read_csv('your_dataset.csv', usecols=columns)\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Replace ",(0,a.jsx)(n.code,{children:"'your_dataset.csv'"})," with the path to your dataset file."]}),"\n",(0,a.jsxs)(n.h2,{id:"2-sorting-with-nlargest",children:["2. Sorting with ",(0,a.jsx)(n.code,{children:"nlargest"})]}),"\n",(0,a.jsx)(n.h3,{id:"21-sorting-by-a-single-column",children:"2.1 Sorting by a Single Column"}),"\n",(0,a.jsxs)(n.p,{children:["To sort the DataFrame by a single column, such as the number of votes, we use the ",(0,a.jsx)(n.code,{children:"nlargest"})," function."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# Sorting by the number of votes (top 10)\ntop_10_votes = df.nlargest(10, 'num_votes')\nprint(top_10_votes)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"22-sorting-by-multiple-columns",children:"2.2 Sorting by Multiple Columns"}),"\n",(0,a.jsxs)(n.p,{children:["To sort by multiple columns, such as rating and number of votes, we pass a list of columns to the ",(0,a.jsx)(n.code,{children:"nlargest"})," function."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# Sorting by rating and then by number of votes\ntop_rated = df.nlargest(10, ['rating', 'num_votes'])\nprint(top_rated)\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"3-sorting-with-nsmallest",children:["3. Sorting with ",(0,a.jsx)(n.code,{children:"nsmallest"})]}),"\n",(0,a.jsxs)(n.p,{children:["Sorting with ",(0,a.jsx)(n.code,{children:"nsmallest"})," works similarly to ",(0,a.jsx)(n.code,{children:"nlargest"}),", but it retrieves the smallest values instead."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# Getting the bottom 10 smallest values for number of votes\nbottom_10_votes = df.nsmallest(10, 'num_votes')\nprint(bottom_10_votes)\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"4-handling-duplicates-with-the-keep-parameter",children:["4. Handling Duplicates with the ",(0,a.jsx)(n.code,{children:"keep"})," Parameter"]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"keep"})," parameter determines how duplicates are handled when retrieving the largest or smallest values."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# Keeping all duplicates for the top rated movies\nall_duplicates = df.nlargest(10, 'rating', keep='all')\nprint(all_duplicates)\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"5-using-sort_values-as-an-alternative",children:["5. Using ",(0,a.jsx)(n.code,{children:"sort_values"})," as an Alternative"]}),"\n",(0,a.jsxs)(n.p,{children:["Though less efficient, you can also use ",(0,a.jsx)(n.code,{children:"sort_values"})," to achieve similar results."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# Sorting using sort_values (less efficient)\nsorted_df = df.sort_values(by=['rating', 'num_votes'], ascending=False).head(10)\nprint(sorted_df)\n"})})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var s=t(6540);const a={},l=s.createContext(a);function r(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);