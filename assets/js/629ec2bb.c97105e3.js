"use strict";(self.webpackChunkmy_docusaurus_site=self.webpackChunkmy_docusaurus_site||[]).push([[6970],{1482:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>t,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"data-analysis/Data_Frames/methods","title":"Series and DataFrames","description":"In this tutorial, we\'ll explore common operations on Pandas Series and DataFrames, highlighting their similarities and differences. We\'ll cover creating Series and DataFrames, performing basic operations like summation, and understanding the concept of axes.","source":"@site/docs/data-analysis/02_Data_Frames/02_methods.md","sourceDirName":"data-analysis/02_Data_Frames","slug":"/data-analysis/Data_Frames/methods","permalink":"/Python/docs/data-analysis/Data_Frames/methods","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/data-analysis/02_Data_Frames/02_methods.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"dataAnalysisSidebar","previous":{"title":"DataFrames in Pandas","permalink":"/Python/docs/data-analysis/Data_Frames/intro"},"next":{"title":"Retrieving Useful Information from Data Frames","permalink":"/Python/docs/data-analysis/Data_Frames/descripe-info"}}');var i=a(4848),r=a(8453);const t={},o="Series and DataFrames",d={},l=[{value:"1. Importing Pandas and Creating Data Structures",id:"1-importing-pandas-and-creating-data-structures",level:3},{value:"2. Performing Common Operations",id:"2-performing-common-operations",level:3},{value:"2.1 Summation in Series:",id:"21-summation-in-series",level:4},{value:"2.2 Summation in DataFrame:",id:"22-summation-in-dataframe",level:4},{value:"3. Understanding Axis",id:"3-understanding-axis",level:3},{value:"3.1 Summation along Columns (Axis 1):",id:"31-summation-along-columns-axis-1",level:4},{value:"3.2 Handling Axis in Series:",id:"32-handling-axis-in-series",level:4},{value:"4. Choosing Axis Representation",id:"4-choosing-axis-representation",level:3},{value:"5. Conclusion",id:"5-conclusion",level:3}];function m(e){const n={code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"series-and-dataframes",children:"Series and DataFrames"})}),"\n",(0,i.jsx)(n.p,{children:"In this tutorial, we'll explore common operations on Pandas Series and DataFrames, highlighting their similarities and differences. We'll cover creating Series and DataFrames, performing basic operations like summation, and understanding the concept of axes."}),"\n",(0,i.jsx)(n.h3,{id:"1-importing-pandas-and-creating-data-structures",children:"1. Importing Pandas and Creating Data Structures"}),"\n",(0,i.jsx)(n.p,{children:"First, let's import the Pandas library and create a Series and a DataFrame."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import pandas as pd\n\n# Create a Pandas Series\nseries = pd.Series([100, 203, 300])\n\n# Create a Pandas DataFrame with nested values\ndata = {'A': [100, 200, 300], 'B': [200, 400, 600], 'C': [300, 600, 900]}\ndf = pd.DataFrame(data)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-performing-common-operations",children:"2. Performing Common Operations"}),"\n",(0,i.jsx)(n.p,{children:"Now, let's perform common operations like finding the sum of elements."}),"\n",(0,i.jsx)(n.h4,{id:"21-summation-in-series",children:"2.1 Summation in Series:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Sum of elements in a Series\nseries_sum = series.sum()\nprint("Sum of elements in Series:", series_sum)\n'})}),"\n",(0,i.jsx)(n.h4,{id:"22-summation-in-dataframe",children:"2.2 Summation in DataFrame:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Sum of elements in each column of a DataFrame\ncolumn_sum = df.sum()\nprint("Sum of elements in each column of DataFrame:")\nprint(column_sum)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"3-understanding-axis",children:"3. Understanding Axis"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"axis"})," parameter specifies the axis along which the operation is performed. Default is ",(0,i.jsx)(n.code,{children:"axis=0"})," which means the operation is performed along the rows."]}),"\n",(0,i.jsx)(n.h4,{id:"31-summation-along-columns-axis-1",children:"3.1 Summation along Columns (Axis 1):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Sum of elements along columns (axis=1) in DataFrame\nrow_sum = df.sum(axis=1)\nprint("Sum of elements along columns (axis=1) in DataFrame:")\nprint(row_sum)\n'})}),"\n",(0,i.jsx)(n.h4,{id:"32-handling-axis-in-series",children:"3.2 Handling Axis in Series:"}),"\n",(0,i.jsx)(n.p,{children:"When working with a Series, the concept of axis doesn't apply in the same way as it does in DataFrames."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Uncommenting the below line would result in an exception:\n# series_sum_axis1 = series.sum(axis=1)\n# Series has only one dimension, so specifying axis=1 doesn't make sense.\n# It would raise an exception.\n"})}),"\n",(0,i.jsx)(n.h3,{id:"4-choosing-axis-representation",children:"4. Choosing Axis Representation"}),"\n",(0,i.jsxs)(n.p,{children:["You can specify axis using either integers (",(0,i.jsx)(n.code,{children:"0"})," for rows, ",(0,i.jsx)(n.code,{children:"1"})," for columns) or strings (",(0,i.jsx)(n.code,{children:"'index'"})," for rows, ",(0,i.jsx)(n.code,{children:"'columns'"})," for columns)."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Specifying axis using string representation ('index' or 'columns')\nrow_sum_string_axis = df.sum(axis='index')  # Equivalent to axis=0\ncolumn_sum_string_axis = df.sum(axis='columns')  # Equivalent to axis=1\nprint(\"Sum of elements using string representation of axis:\")\nprint(\"Row sum:\", row_sum_string_axis)\nprint(\"Column sum:\", column_sum_string_axis)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"5-conclusion",children:"5. Conclusion"}),"\n",(0,i.jsxs)(n.p,{children:["When choosing between integer or string representation of axis, consider readability and personal preference. Both representations are acceptable, but shorter representations (",(0,i.jsx)(n.code,{children:"0"})," and ",(0,i.jsx)(n.code,{children:"1"}),") can save space in your code."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Choose based on personal preference and readability\n# Longer representation for clarity:\ndf_max_columns_axis = df.max(axis='columns')  \n# Shorter representation for concise code:\ndf_max_columns_axis_short = df.max(axis=1)  \n"})})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>o});var s=a(6540);const i={},r=s.createContext(i);function t(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);