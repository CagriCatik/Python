"use strict";(self.webpackChunkpython=self.webpackChunkpython||[]).push([[2900],{9039:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"python-guide/File-Management/toml","title":"TOML","description":"TOML (Tom\'s Obvious, Minimal Language) is a human-readable data serialization format designed to be easy to read and write. It is commonly used for configuration files due to its simplicity and support for nested structures. TOML provides a clear structure for representing key-value pairs, arrays, and tables, making it a popular choice among developers.","source":"@site/docs/python-guide/15_File-Management/11_toml.md","sourceDirName":"python-guide/15_File-Management","slug":"/python-guide/File-Management/toml","permalink":"/Python/docs/python-guide/File-Management/toml","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/python-guide/15_File-Management/11_toml.md","tags":[],"version":"current","sidebarPosition":11,"frontMatter":{},"sidebar":"guideSidebar","previous":{"title":"YAML","permalink":"/Python/docs/python-guide/File-Management/yaml"}}');var l=i(4848),t=i(8453);const r={},s="TOML",o={},d=[{value:"TOML Syntax",id:"toml-syntax",level:2},{value:"Installing a TOML Library",id:"installing-a-toml-library",level:2},{value:"For Python 3.10 or earlier:",id:"for-python-310-or-earlier",level:3},{value:"Reading TOML Files in Python",id:"reading-toml-files-in-python",level:2},{value:"Example: Reading a TOML File",id:"example-reading-a-toml-file",level:3},{value:"Writing TOML Files in Python",id:"writing-toml-files-in-python",level:2},{value:"Example: Writing a TOML File",id:"example-writing-a-toml-file",level:3},{value:"Using Nested Tables",id:"using-nested-tables",level:2},{value:"Example: Nested Tables",id:"example-nested-tables",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Example: Handling Errors",id:"example-handling-errors",level:3},{value:"Use Cases for TOML",id:"use-cases-for-toml",level:2},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"toml",children:"TOML"})}),"\n",(0,l.jsx)(n.p,{children:"TOML (Tom's Obvious, Minimal Language) is a human-readable data serialization format designed to be easy to read and write. It is commonly used for configuration files due to its simplicity and support for nested structures. TOML provides a clear structure for representing key-value pairs, arrays, and tables, making it a popular choice among developers."}),"\n",(0,l.jsx)(n.h2,{id:"toml-syntax",children:"TOML Syntax"}),"\n",(0,l.jsx)(n.p,{children:"TOML uses key-value pairs, tables, and arrays to structure data. Here's an example:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-toml",children:'# Example TOML file\n[database]\nhost = "127.0.0.1"\nport = 5432\nuser = "admin"\npassword = "secret"\n\n[servers]\nactive = true\nlocations = ["us-east", "us-west", "eu-central"]\n\n[servers.backup]\nenabled = false\nfrequency = "daily"\n'})}),"\n",(0,l.jsx)(n.h2,{id:"installing-a-toml-library",children:"Installing a TOML Library"}),"\n",(0,l.jsxs)(n.p,{children:["To work with TOML files in Python, install the ",(0,l.jsx)(n.code,{children:"toml"})," or ",(0,l.jsx)(n.code,{children:"tomli"})," library. Python 3.11 and above have native support for TOML through the ",(0,l.jsx)(n.code,{children:"tomllib"})," module."]}),"\n",(0,l.jsx)(n.h3,{id:"for-python-310-or-earlier",children:"For Python 3.10 or earlier:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"pip install toml\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Or, if you prefer ",(0,l.jsx)(n.code,{children:"tomli"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"pip install tomli\n"})}),"\n",(0,l.jsx)(n.h2,{id:"reading-toml-files-in-python",children:"Reading TOML Files in Python"}),"\n",(0,l.jsxs)(n.p,{children:["You can read TOML files using the ",(0,l.jsx)(n.code,{children:"toml"})," or ",(0,l.jsx)(n.code,{children:"tomllib"})," module (for Python 3.11+)."]}),"\n",(0,l.jsx)(n.h3,{id:"example-reading-a-toml-file",children:"Example: Reading a TOML File"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"import toml\n\n# Read TOML file\ndata = toml.load('config.toml')\n\nprint(data)\n"})}),"\n",(0,l.jsx)(n.p,{children:"For Python 3.11 and above:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"import tomllib\n\n# Read TOML file\nwith open('config.toml', 'rb') as file:\n    data = tomllib.load(file)\n\nprint(data)\n"})}),"\n",(0,l.jsxs)(n.p,{children:["This code parses the ",(0,l.jsx)(n.code,{children:"config.toml"})," file and converts it into a Python dictionary."]}),"\n",(0,l.jsx)(n.h2,{id:"writing-toml-files-in-python",children:"Writing TOML Files in Python"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"toml"})," library allows you to write Python data structures into TOML format."]}),"\n",(0,l.jsx)(n.h3,{id:"example-writing-a-toml-file",children:"Example: Writing a TOML File"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'import toml\n\n# Data to write\ndata = {\n    "database": {\n        "host": "127.0.0.1",\n        "port": 5432,\n        "user": "admin",\n        "password": "secret"\n    },\n    "servers": {\n        "active": True,\n        "locations": ["us-east", "us-west", "eu-central"],\n        "backup": {\n            "enabled": False,\n            "frequency": "daily"\n        }\n    }\n}\n\n# Write to TOML file\nwith open(\'output.toml\', \'w\') as file:\n    toml.dump(data, file)\n'})}),"\n",(0,l.jsxs)(n.p,{children:["This example writes the ",(0,l.jsx)(n.code,{children:"data"})," dictionary to ",(0,l.jsx)(n.code,{children:"output.toml"})," in TOML format."]}),"\n",(0,l.jsx)(n.h2,{id:"using-nested-tables",children:"Using Nested Tables"}),"\n",(0,l.jsx)(n.p,{children:"TOML supports nested tables, which are represented as nested dictionaries in Python."}),"\n",(0,l.jsx)(n.h3,{id:"example-nested-tables",children:"Example: Nested Tables"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-toml",children:'[package]\nname = "example"\nversion = "1.0.0"\n\ndependencies = ["requests", "flask"]\n\n[package.settings]\nenabled = true\nfeatures = ["debug", "logging"]\n'})}),"\n",(0,l.jsx)(n.p,{children:"In Python, this TOML file would load as:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'{\n    "package": {\n        "name": "example",\n        "version": "1.0.0",\n        "dependencies": ["requests", "flask"],\n        "settings": {\n            "enabled": True,\n            "features": ["debug", "logging"]\n        }\n    }\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,l.jsx)(n.p,{children:"When working with TOML files, handle exceptions to manage syntax errors or missing files gracefully."}),"\n",(0,l.jsx)(n.h3,{id:"example-handling-errors",children:"Example: Handling Errors"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'import toml\n\ntry:\n    data = toml.load(\'config.toml\')\n    print(data)\nexcept toml.TomlDecodeError as e:\n    print(f"TOML Syntax Error: {e}")\nexcept FileNotFoundError:\n    print("The specified file does not exist.")\n'})}),"\n",(0,l.jsx)(n.h2,{id:"use-cases-for-toml",children:"Use Cases for TOML"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Configuration Files"}),": TOML is ideal for defining settings and preferences in a structured, human-readable format."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Dependency Management"}),": Tools like ",(0,l.jsx)(n.code,{children:"poetry"})," use TOML for managing dependencies in Python projects."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Data Serialization"}),": TOML can be used for lightweight data exchange between systems."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,l.jsxs)(n.p,{children:["TOML is a powerful and user-friendly format for configuration and data serialization. With Python's ",(0,l.jsx)(n.code,{children:"toml"})," library or the built-in ",(0,l.jsx)(n.code,{children:"tomllib"})," (Python 3.11+), you can easily read, write, and manipulate TOML files in your projects. Its simplicity and readability make it an excellent choice for developers looking for a structured, human-readable format."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>s});var a=i(6540);const l={},t=a.createContext(l);function r(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);