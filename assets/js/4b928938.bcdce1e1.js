"use strict";(self.webpackChunkmy_docusaurus_site=self.webpackChunkmy_docusaurus_site||[]).push([[2228],{295:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"rest-api/Building-REST-API/06","title":"Using FastAPI","description":"In this tutorial, we will explore FastAPI, a modern, fast (high-performance) web framework for building APIs with Python. FastAPI is known for its speed and ease of use, leveraging Python type hints for validation and serialization.","source":"@site/docs/rest-api/Building-REST-API/06.md","sourceDirName":"rest-api/Building-REST-API","slug":"/rest-api/Building-REST-API/06","permalink":"/Python/docs/rest-api/Building-REST-API/06","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rest-api/Building-REST-API/06.md","tags":[],"version":"current","frontMatter":{},"sidebar":"restAPISidebar","previous":{"title":"Adding URLs and Using the DRF API","permalink":"/Python/docs/rest-api/Building-REST-API/05"},"next":{"title":"Using the FastAPI API","permalink":"/Python/docs/rest-api/Building-REST-API/07"}}');var a=i(4848),s=i(8453);const r={},l="Using FastAPI",d={},o=[{value:"Overview",id:"overview",level:2},{value:"Step 1: Setting Up a FastAPI Project",id:"step-1-setting-up-a-fastapi-project",level:2},{value:"Install FastAPI and Uvicorn",id:"install-fastapi-and-uvicorn",level:3},{value:"Create a FastAPI Project",id:"create-a-fastapi-project",level:3},{value:"Step 2: Creating a Basic FastAPI Application",id:"step-2-creating-a-basic-fastapi-application",level:2},{value:"Define a Basic App",id:"define-a-basic-app",level:3},{value:"Run the Application",id:"run-the-application",level:3},{value:"Interactive API Documentation",id:"interactive-api-documentation",level:3},{value:"Step 3: Defining Routes and Handling Requests",id:"step-3-defining-routes-and-handling-requests",level:2},{value:"Create More Routes",id:"create-more-routes",level:3},{value:"Handling POST Requests",id:"handling-post-requests",level:3},{value:"Step 4: Using Pydantic for Data Validation",id:"step-4-using-pydantic-for-data-validation",level:2},{value:"Define a Pydantic Model",id:"define-a-pydantic-model",level:3},{value:"Validate Data",id:"validate-data",level:3},{value:"Step 5: Implementing Dependency Injection",id:"step-5-implementing-dependency-injection",level:2},{value:"Define Dependencies",id:"define-dependencies",level:3},{value:"Using Dependencies in Routes",id:"using-dependencies-in-routes",level:3},{value:"Step 6: Running and Testing the FastAPI Application",id:"step-6-running-and-testing-the-fastapi-application",level:2},{value:"Testing with Uvicorn",id:"testing-with-uvicorn",level:3},{value:"Testing Endpoints",id:"testing-endpoints",level:3},{value:"Example cURL Requests",id:"example-curl-requests",level:4},{value:"Writing Automated Tests",id:"writing-automated-tests",level:3},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"using-fastapi",children:"Using FastAPI"})}),"\n",(0,a.jsx)(n.p,{children:"In this tutorial, we will explore FastAPI, a modern, fast (high-performance) web framework for building APIs with Python. FastAPI is known for its speed and ease of use, leveraging Python type hints for validation and serialization."}),"\n",(0,a.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(n.p,{children:"We will cover:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Setting up a FastAPI project"}),"\n",(0,a.jsx)(n.li,{children:"Creating a basic FastAPI application"}),"\n",(0,a.jsx)(n.li,{children:"Defining routes and handling requests"}),"\n",(0,a.jsx)(n.li,{children:"Using Pydantic for data validation"}),"\n",(0,a.jsx)(n.li,{children:"Implementing dependency injection"}),"\n",(0,a.jsx)(n.li,{children:"Running and testing the FastAPI application"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"step-1-setting-up-a-fastapi-project",children:"Step 1: Setting Up a FastAPI Project"}),"\n",(0,a.jsx)(n.h3,{id:"install-fastapi-and-uvicorn",children:"Install FastAPI and Uvicorn"}),"\n",(0,a.jsx)(n.p,{children:"FastAPI requires an ASGI server for serving the application. Uvicorn is a popular choice."}),"\n",(0,a.jsx)(n.p,{children:"Install FastAPI and Uvicorn using pip:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pip install fastapi uvicorn\n"})}),"\n",(0,a.jsx)(n.h3,{id:"create-a-fastapi-project",children:"Create a FastAPI Project"}),"\n",(0,a.jsx)(n.p,{children:"Create a new directory for your project and navigate into it:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"mkdir fastapi_project\ncd fastapi_project\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Create a new file named ",(0,a.jsx)(n.code,{children:"main.py"}),". This file will contain your FastAPI application."]}),"\n",(0,a.jsx)(n.h2,{id:"step-2-creating-a-basic-fastapi-application",children:"Step 2: Creating a Basic FastAPI Application"}),"\n",(0,a.jsx)(n.h3,{id:"define-a-basic-app",children:"Define a Basic App"}),"\n",(0,a.jsxs)(n.p,{children:["Open ",(0,a.jsx)(n.code,{children:"main.py"})," and define a simple FastAPI app:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get("/")\ndef read_root():\n    return {"Hello": "World"}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"run-the-application",children:"Run the Application"}),"\n",(0,a.jsx)(n.p,{children:"Use Uvicorn to run your FastAPI application:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"uvicorn main:app --reload\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Visit ",(0,a.jsx)(n.code,{children:"http://127.0.0.1:8000"})," in your browser, and you should see:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{"Hello": "World"}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"interactive-api-documentation",children:"Interactive API Documentation"}),"\n",(0,a.jsx)(n.p,{children:"FastAPI automatically generates interactive API documentation:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Swagger UI"}),": ",(0,a.jsx)(n.code,{children:"http://127.0.0.1:8000/docs"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"ReDoc"}),": ",(0,a.jsx)(n.code,{children:"http://127.0.0.1:8000/redoc"})]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"step-3-defining-routes-and-handling-requests",children:"Step 3: Defining Routes and Handling Requests"}),"\n",(0,a.jsx)(n.h3,{id:"create-more-routes",children:"Create More Routes"}),"\n",(0,a.jsxs)(n.p,{children:["Add additional routes to ",(0,a.jsx)(n.code,{children:"main.py"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from typing import Optional\n\n@app.get("/items/{item_id}")\ndef read_item(item_id: int, q: Optional[str] = None):\n    return {"item_id": item_id, "q": q}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"handling-post-requests",children:"Handling POST Requests"}),"\n",(0,a.jsx)(n.p,{children:"Define a POST route to handle data submission:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from pydantic import BaseModel\n\nclass Item(BaseModel):\n    name: str\n    description: Optional[str] = None\n    price: float\n    tax: Optional[float] = None\n\n@app.post("/items/")\ndef create_item(item: Item):\n    return {"item": item}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"step-4-using-pydantic-for-data-validation",children:"Step 4: Using Pydantic for Data Validation"}),"\n",(0,a.jsx)(n.h3,{id:"define-a-pydantic-model",children:"Define a Pydantic Model"}),"\n",(0,a.jsxs)(n.p,{children:["Pydantic models are used for data validation and serialization. Define a model in ",(0,a.jsx)(n.code,{children:"main.py"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from pydantic import BaseModel\n\nclass User(BaseModel):\n    username: str\n    email: str\n    full_name: Optional[str] = None\n    age: Optional[int] = None\n"})}),"\n",(0,a.jsx)(n.h3,{id:"validate-data",children:"Validate Data"}),"\n",(0,a.jsx)(n.p,{children:"Use Pydantic models in your route functions to automatically validate request data:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'@app.post("/users/")\ndef create_user(user: User):\n    return {"user": user}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"step-5-implementing-dependency-injection",children:"Step 5: Implementing Dependency Injection"}),"\n",(0,a.jsx)(n.h3,{id:"define-dependencies",children:"Define Dependencies"}),"\n",(0,a.jsx)(n.p,{children:"FastAPI allows you to declare dependencies that can be used across multiple routes:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from fastapi import Depends\n\ndef get_query_param(q: Optional[str] = None):\n    return q\n\n@app.get("/items/")\ndef read_items(q: str = Depends(get_query_param)):\n    return {"q": q}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"using-dependencies-in-routes",children:"Using Dependencies in Routes"}),"\n",(0,a.jsx)(n.p,{children:"Dependencies can be used to manage common functionality:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def common_parameters(q: Optional[str] = None, page: int = 1):\n    return {"q": q, "page": page}\n\n@app.get("/search/")\ndef search_items(params: dict = Depends(common_parameters)):\n    return {"params": params}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"step-6-running-and-testing-the-fastapi-application",children:"Step 6: Running and Testing the FastAPI Application"}),"\n",(0,a.jsx)(n.h3,{id:"testing-with-uvicorn",children:"Testing with Uvicorn"}),"\n",(0,a.jsx)(n.p,{children:"Run the application with:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"uvicorn main:app --reload\n"})}),"\n",(0,a.jsx)(n.h3,{id:"testing-endpoints",children:"Testing Endpoints"}),"\n",(0,a.jsx)(n.p,{children:"You can test your FastAPI application using tools like Postman or cURL, similar to how you tested the DRF API."}),"\n",(0,a.jsx)(n.h4,{id:"example-curl-requests",children:"Example cURL Requests"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"GET Request"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X GET "http://127.0.0.1:8000/items/5?q=somequery"\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"POST Request"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X POST "http://127.0.0.1:8000/items/" -H "Content-Type: application/json" -d \'{"name": "Item1", "price": 10.5}\'\n'})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"writing-automated-tests",children:"Writing Automated Tests"}),"\n",(0,a.jsxs)(n.p,{children:["FastAPI supports writing tests using standard Python testing libraries. Here\u2019s a simple example with ",(0,a.jsx)(n.code,{children:"pytest"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from fastapi.testclient import TestClient\nfrom main import app\n\nclient = TestClient(app)\n\ndef test_read_root():\n    response = client.get("/")\n    assert response.status_code == 200\n    assert response.json() == {"Hello": "World"}\n\ndef test_create_item():\n    response = client.post("/items/", json={"name": "Item", "price": 5.0})\n    assert response.status_code == 200\n    assert response.json() == {"item": {"name": "Item", "price": 5.0}}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Run your tests with:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pytest\n"})}),"\n",(0,a.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,a.jsx)(n.p,{children:"In this tutorial, we explored FastAPI, setting up a basic project, defining routes, using Pydantic for data validation, implementing dependency injection, and running and testing the application. FastAPI\u2019s features and automatic interactive documentation make it a powerful choice for building APIs."}),"\n",(0,a.jsx)(n.p,{children:"In the next chapter, we will delve into using the FastAPI API and how to interact with it effectively. Stay tuned!"})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(6540);const a={},s=t.createContext(a);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);