"use strict";(self.webpackChunkpython=self.webpackChunkpython||[]).push([[1167],{5690:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"data-analysis/Data_Frames/descripe-info","title":"Retrieving Useful Information from Data Frames","description":"In this tutorial, we will explore how to retrieve valuable information from data frames using the Pandas library in Python. We will use a dataset containing information about the top 1000 movies and TV shows. This dataset includes missing values and requires some data cleaning. Let\'s dive in step by step.","source":"@site/docs/data-analysis/02_Data_Frames/03_descripe-info.md","sourceDirName":"data-analysis/02_Data_Frames","slug":"/data-analysis/Data_Frames/descripe-info","permalink":"/Python/docs/data-analysis/Data_Frames/descripe-info","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/data-analysis/02_Data_Frames/03_descripe-info.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"dataAnalysisSidebar","previous":{"title":"Series and DataFrames","permalink":"/Python/docs/data-analysis/Data_Frames/methods"},"next":{"title":"Sorting Data","permalink":"/Python/docs/data-analysis/Data_Frames/nlargest-nsmallest"}}');var s=a(4848),t=a(8453);const r={},o="Retrieving Useful Information from Data Frames",l={},d=[{value:"Step 1: Importing Necessary Libraries and Loading the Dataset",id:"step-1-importing-necessary-libraries-and-loading-the-dataset",level:3},{value:"Step 2: Initial Data Exploration",id:"step-2-initial-data-exploration",level:3},{value:"Step 3: Selecting Relevant Columns",id:"step-3-selecting-relevant-columns",level:3},{value:"Step 4: Understanding the Dataset",id:"step-4-understanding-the-dataset",level:3},{value:"Using <code>.info()</code> method",id:"using-info-method",level:4},{value:"Using <code>.describe()</code> method",id:"using-describe-method",level:4},{value:"Step 5: Data Cleaning",id:"step-5-data-cleaning",level:3},{value:"Converting &#39;gross income&#39; to Numeric Type",id:"converting-gross-income-to-numeric-type",level:4},{value:"Step 6: Further Data Analysis",id:"step-6-further-data-analysis",level:3},{value:"Calculating Additional Statistics",id:"calculating-additional-statistics",level:4},{value:"Step 7: Including Non-Numeric Data in Description",id:"step-7-including-non-numeric-data-in-description",level:3},{value:"Conclusion",id:"conclusion",level:3}];function c(e){const n={code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"retrieving-useful-information-from-data-frames",children:"Retrieving Useful Information from Data Frames"})}),"\n",(0,s.jsx)(n.p,{children:"In this tutorial, we will explore how to retrieve valuable information from data frames using the Pandas library in Python. We will use a dataset containing information about the top 1000 movies and TV shows. This dataset includes missing values and requires some data cleaning. Let's dive in step by step."}),"\n",(0,s.jsx)(n.h3,{id:"step-1-importing-necessary-libraries-and-loading-the-dataset",children:"Step 1: Importing Necessary Libraries and Loading the Dataset"}),"\n",(0,s.jsx)(n.p,{children:"First, ensure you have Pandas installed. If not, you can install it using pip:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pip install pandas\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now, let's import Pandas and load our dataset:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import pandas as pd\n\n# Load the dataset\ndf = pd.read_csv('top_1000_movies.csv')  # Make sure to replace 'top_1000_movies.csv' with your actual dataset filename\n"})}),"\n",(0,s.jsx)(n.h3,{id:"step-2-initial-data-exploration",children:"Step 2: Initial Data Exploration"}),"\n",(0,s.jsx)(n.p,{children:"Before selecting specific columns, let's take a glimpse of our dataset:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Display the first few rows of the dataframe\nprint(df.head())\n"})}),"\n",(0,s.jsx)(n.p,{children:"You'll notice that the dataset contains various columns such as 'series title', 'release year', 'genre', 'rating', 'number of votes', and 'gross income'."}),"\n",(0,s.jsx)(n.h3,{id:"step-3-selecting-relevant-columns",children:"Step 3: Selecting Relevant Columns"}),"\n",(0,s.jsx)(n.p,{children:"To make our analysis more manageable, let's select a subset of columns:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Selecting relevant columns\nselected_columns = ['series title', 'release year', 'genre', 'rating', 'number of votes', 'gross income']\ndf = df[selected_columns]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"step-4-understanding-the-dataset",children:"Step 4: Understanding the Dataset"}),"\n",(0,s.jsxs)(n.h4,{id:"using-info-method",children:["Using ",(0,s.jsx)(n.code,{children:".info()"})," method"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:".info()"})," method provides an overview of the dataframe's structure, including data types and missing values:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Displaying information about the dataframe\nprint(df.info())\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will give us insights into the number of entries, data types, and presence of missing values."}),"\n",(0,s.jsxs)(n.h4,{id:"using-describe-method",children:["Using ",(0,s.jsx)(n.code,{children:".describe()"})," method"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:".describe()"})," method summarizes the numerical columns in the dataset:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Describing numerical columns\nprint(df.describe().round())\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will give us statistics like count, mean, standard deviation, and percentiles for numerical columns."}),"\n",(0,s.jsx)(n.h3,{id:"step-5-data-cleaning",children:"Step 5: Data Cleaning"}),"\n",(0,s.jsx)(n.h4,{id:"converting-gross-income-to-numeric-type",children:"Converting 'gross income' to Numeric Type"}),"\n",(0,s.jsx)(n.p,{children:"Since 'gross income' is initially treated as an object, we need to convert it to a numeric type for analysis:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Convert 'gross income' to numeric type\ndf['gross income'] = df['gross income'].str.replace(',', '').fillna(0).astype(float)\n"})}),"\n",(0,s.jsx)(n.p,{children:"This code snippet removes commas from the 'gross income' values, fills missing values with zero, and converts the column to a float type."}),"\n",(0,s.jsx)(n.h3,{id:"step-6-further-data-analysis",children:"Step 6: Further Data Analysis"}),"\n",(0,s.jsx)(n.h4,{id:"calculating-additional-statistics",children:"Calculating Additional Statistics"}),"\n",(0,s.jsx)(n.p,{children:"Now, we can calculate additional statistics such as mean, max, min, and quantiles:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Calculate mean, max, min, and quantiles\nmean_values = df.mean(numeric_only=True)\nmax_values = df.max(numeric_only=True)\nmin_values = df.min(numeric_only=True)\nquantiles = df.quantile(0.5)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"step-7-including-non-numeric-data-in-description",children:"Step 7: Including Non-Numeric Data in Description"}),"\n",(0,s.jsxs)(n.p,{children:["If we want to include non-numeric data (e.g., strings) in the description, we can use the ",(0,s.jsx)(n.code,{children:"include"})," parameter:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Include non-numeric data in description\ndescription_with_strings = df.describe(include='object')\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will provide insights into non-numeric columns like 'series title', 'release year', and 'genre'."}),"\n",(0,s.jsx)(n.h3,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(n.p,{children:"By following these steps, you can efficiently retrieve and analyze valuable information from your dataset using Pandas. This tutorial covers basic data exploration, cleaning, and analysis techniques, providing a solid foundation for further data manipulation and visualization tasks."})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>o});var i=a(6540);const s={},t=i.createContext(s);function r(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);