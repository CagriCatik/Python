"use strict";(self.webpackChunkpython=self.webpackChunkpython||[]).push([[3145],{901:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"python-guide/Python_Basics/Mad_Libs_Project","title":"Mad Libs Game","description":"In this project, we\'ll be creating a simple Mad Libs game. Mad Libs is a story-based game where users provide various words like nouns, names, and verbs, and those words are then inserted into a pre-made story to create a humorous and often nonsensical result.","source":"@site/docs/python-guide/01_Python_Basics/21_Mad_Libs_Project.md","sourceDirName":"python-guide/01_Python_Basics","slug":"/python-guide/Python_Basics/Mad_Libs_Project","permalink":"/Python/docs/python-guide/Python_Basics/Mad_Libs_Project","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/python-guide/01_Python_Basics/21_Mad_Libs_Project.md","tags":[],"version":"current","sidebarPosition":21,"frontMatter":{},"sidebar":"guideSidebar","previous":{"title":"None Type","permalink":"/Python/docs/python-guide/Python_Basics/None"},"next":{"title":"Truthy and Falsy Values","permalink":"/Python/docs/python-guide/Python_Basics/Truthy_and_Falsy"}}');var a=t(4848),r=t(8453);const o={},i="Mad Libs Game",d={},l=[{value:"How to Play",id:"how-to-play",level:2},{value:"Code Snippets and Examples",id:"code-snippets-and-examples",level:2},{value:"User Input",id:"user-input",level:3},{value:"Story Generation",id:"story-generation",level:3},{value:"Example Run",id:"example-run",level:3}];function u(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"mad-libs-game",children:"Mad Libs Game"})}),"\n",(0,a.jsx)(n.p,{children:"In this project, we'll be creating a simple Mad Libs game. Mad Libs is a story-based game where users provide various words like nouns, names, and verbs, and those words are then inserted into a pre-made story to create a humorous and often nonsensical result."}),"\n",(0,a.jsx)(n.h2,{id:"how-to-play",children:"How to Play"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Run the Python script."}),"\n",(0,a.jsx)(n.li,{children:"Enter the requested words when prompted."}),"\n",(0,a.jsx)(n.li,{children:"Enjoy the generated Mad Libs story!"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"code-snippets-and-examples",children:"Code Snippets and Examples"}),"\n",(0,a.jsx)(n.h3,{id:"user-input",children:"User Input"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# Get user input for name\nname = input("Enter a name: ")\n\n# Get user input for noun a\nnoun_a = input("Enter a noun: ")\n\n# Repeat the process for other variables (verb_a, noun_b, verb_b, number_a, number_b)\n# ...\n\n# Print the story\nprint(story)\n'})}),"\n",(0,a.jsx)(n.h3,{id:"story-generation",children:"Story Generation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# Define variables\nname = input("Enter a name: ")\nnoun_a = input("Enter a noun: ")\n# ... (other variables)\n\n# Create the story using formatted strings\nstory = f"""\n{\'-\' * 30}\nThis is a story about {name}, a strong and beautiful {noun_a} who loved to {verb_a}.\n{name} once {verb_b} and won a {noun_b} as a prize. Isn\'t that incredible?\nToday, {name} is {int(number_a) + int(number_b)} years old and has retired from all adventures,\nbut the story will live on forever.\n{\'-\' * 30}\n"""\n\n# Print the story\nprint(story)\n'})}),"\n",(0,a.jsx)(n.h3,{id:"example-run",children:"Example Run"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# Example run with user input\nname = "Bob"\nnoun_a = "apple"\n# ... (other variables)\n\n# Print the generated story\nprint(story)\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var s=t(6540);const a={},r=s.createContext(a);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);