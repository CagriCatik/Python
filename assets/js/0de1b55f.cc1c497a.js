"use strict";(self.webpackChunkpython=self.webpackChunkpython||[]).push([[2847],{1021:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rest-api/Building-REST-API/fastapi","title":"Using the FastAPI API","description":"In this tutorial, we will explore how to interact with the FastAPI application you built. We\u2019ll cover how to make requests to your FastAPI API, how to use interactive documentation, and how to handle responses and errors.","source":"@site/docs/rest-api/Building-REST-API/07_fastapi.md","sourceDirName":"rest-api/Building-REST-API","slug":"/rest-api/Building-REST-API/fastapi","permalink":"/Python/docs/rest-api/Building-REST-API/fastapi","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rest-api/Building-REST-API/07_fastapi.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{},"sidebar":"restAPISidebar","previous":{"title":"Using FastAPI","permalink":"/Python/docs/rest-api/Building-REST-API/using_fastapi"},"next":{"title":"Interacting with REST APIs and Python","permalink":"/Python/docs/rest-api/Building-REST-API/08"}}');var i=s(4848),r=s(8453);const a={},o="Using the FastAPI API",l={},d=[{value:"Overview",id:"overview",level:2},{value:"Step 1: Accessing FastAPI API Endpoints",id:"step-1-accessing-fastapi-api-endpoints",level:2},{value:"Making GET Requests",id:"making-get-requests",level:3},{value:"Using cURL",id:"using-curl",level:4},{value:"Using Postman",id:"using-postman",level:4},{value:"Making POST Requests",id:"making-post-requests",level:3},{value:"Using cURL",id:"using-curl-1",level:4},{value:"Using Postman",id:"using-postman-1",level:4},{value:"Making PUT and PATCH Requests",id:"making-put-and-patch-requests",level:3},{value:"Using cURL",id:"using-curl-2",level:4},{value:"Using Postman",id:"using-postman-2",level:4},{value:"Making DELETE Requests",id:"making-delete-requests",level:3},{value:"Using cURL",id:"using-curl-3",level:4},{value:"Using Postman",id:"using-postman-3",level:4},{value:"Step 2: Using Interactive API Documentation",id:"step-2-using-interactive-api-documentation",level:2},{value:"Swagger UI",id:"swagger-ui",level:3},{value:"ReDoc",id:"redoc",level:3},{value:"Step 3: Handling Different Types of Responses",id:"step-3-handling-different-types-of-responses",level:2},{value:"JSON Responses",id:"json-responses",level:3},{value:"Custom Status Codes",id:"custom-status-codes",level:3},{value:"Response Models",id:"response-models",level:3},{value:"Step 4: Managing and Debugging Errors",id:"step-4-managing-and-debugging-errors",level:2},{value:"Handling Exceptions",id:"handling-exceptions",level:3},{value:"Logging Errors",id:"logging-errors",level:3},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"using-the-fastapi-api",children:"Using the FastAPI API"})}),"\n",(0,i.jsx)(n.p,{children:"In this tutorial, we will explore how to interact with the FastAPI application you built. We\u2019ll cover how to make requests to your FastAPI API, how to use interactive documentation, and how to handle responses and errors."}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"We will cover:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Accessing FastAPI API endpoints"}),"\n",(0,i.jsx)(n.li,{children:"Using interactive API documentation"}),"\n",(0,i.jsx)(n.li,{children:"Handling different types of responses"}),"\n",(0,i.jsx)(n.li,{children:"Managing and debugging errors"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"step-1-accessing-fastapi-api-endpoints",children:"Step 1: Accessing FastAPI API Endpoints"}),"\n",(0,i.jsx)(n.h3,{id:"making-get-requests",children:"Making GET Requests"}),"\n",(0,i.jsxs)(n.p,{children:["You can interact with your FastAPI API by making GET requests to your endpoints. For example, if you have a ",(0,i.jsx)(n.code,{children:"GET /items/{item_id}"})," endpoint, you can use ",(0,i.jsx)(n.code,{children:"curl"}),", Postman, or your web browser to retrieve data."]}),"\n",(0,i.jsx)(n.h4,{id:"using-curl",children:"Using cURL"}),"\n",(0,i.jsxs)(n.p,{children:["Retrieve an item with ",(0,i.jsx)(n.code,{children:"item_id"})," 1:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X GET "http://127.0.0.1:8000/items/1"\n'})}),"\n",(0,i.jsx)(n.h4,{id:"using-postman",children:"Using Postman"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Open Postman and create a new request."}),"\n",(0,i.jsx)(n.li,{children:"Set the method to GET."}),"\n",(0,i.jsxs)(n.li,{children:["Enter the URL ",(0,i.jsx)(n.code,{children:"http://127.0.0.1:8000/items/1"}),"."]}),"\n",(0,i.jsx)(n.li,{children:'Click "Send" to see the response.'}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"making-post-requests",children:"Making POST Requests"}),"\n",(0,i.jsx)(n.p,{children:"To create new resources, make POST requests with the required data."}),"\n",(0,i.jsx)(n.h4,{id:"using-curl-1",children:"Using cURL"}),"\n",(0,i.jsx)(n.p,{children:"Create a new item:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST "http://127.0.0.1:8000/items/" -H "Content-Type: application/json" -d \'{"name": "NewItem", "price": 20.0}\'\n'})}),"\n",(0,i.jsx)(n.h4,{id:"using-postman-1",children:"Using Postman"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Open Postman and create a new request."}),"\n",(0,i.jsx)(n.li,{children:"Set the method to POST."}),"\n",(0,i.jsxs)(n.li,{children:["Enter the URL ",(0,i.jsx)(n.code,{children:"http://127.0.0.1:8000/items/"}),"."]}),"\n",(0,i.jsx)(n.li,{children:'In the "Body" tab, select "raw" and set the type to JSON.'}),"\n",(0,i.jsxs)(n.li,{children:["Enter the JSON data, e.g., ",(0,i.jsx)(n.code,{children:'{"name": "NewItem", "price": 20.0}'}),"."]}),"\n",(0,i.jsx)(n.li,{children:'Click "Send" to see the response.'}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"making-put-and-patch-requests",children:"Making PUT and PATCH Requests"}),"\n",(0,i.jsx)(n.p,{children:"To update existing resources, you can use PUT (for full updates) or PATCH (for partial updates)."}),"\n",(0,i.jsx)(n.h4,{id:"using-curl-2",children:"Using cURL"}),"\n",(0,i.jsx)(n.p,{children:"Update an item (full update):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X PUT "http://127.0.0.1:8000/items/1" -H "Content-Type: application/json" -d \'{"name": "UpdatedItem", "price": 25.0}\'\n'})}),"\n",(0,i.jsx)(n.p,{children:"Update an item (partial update):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X PATCH "http://127.0.0.1:8000/items/1" -H "Content-Type: application/json" -d \'{"price": 25.0}\'\n'})}),"\n",(0,i.jsx)(n.h4,{id:"using-postman-2",children:"Using Postman"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Open Postman and create a new request."}),"\n",(0,i.jsx)(n.li,{children:"Set the method to PUT or PATCH."}),"\n",(0,i.jsxs)(n.li,{children:["Enter the URL ",(0,i.jsx)(n.code,{children:"http://127.0.0.1:8000/items/1"}),"."]}),"\n",(0,i.jsx)(n.li,{children:'In the "Body" tab, select "raw" and set the type to JSON.'}),"\n",(0,i.jsx)(n.li,{children:"Enter the JSON data for the update."}),"\n",(0,i.jsx)(n.li,{children:'Click "Send" to see the response.'}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"making-delete-requests",children:"Making DELETE Requests"}),"\n",(0,i.jsx)(n.p,{children:"To delete a resource, use the DELETE method."}),"\n",(0,i.jsx)(n.h4,{id:"using-curl-3",children:"Using cURL"}),"\n",(0,i.jsxs)(n.p,{children:["Delete an item with ",(0,i.jsx)(n.code,{children:"item_id"})," 1:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X DELETE "http://127.0.0.1:8000/items/1"\n'})}),"\n",(0,i.jsx)(n.h4,{id:"using-postman-3",children:"Using Postman"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Open Postman and create a new request."}),"\n",(0,i.jsx)(n.li,{children:"Set the method to DELETE."}),"\n",(0,i.jsxs)(n.li,{children:["Enter the URL ",(0,i.jsx)(n.code,{children:"http://127.0.0.1:8000/items/1"}),"."]}),"\n",(0,i.jsx)(n.li,{children:'Click "Send" to see the response.'}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"step-2-using-interactive-api-documentation",children:"Step 2: Using Interactive API Documentation"}),"\n",(0,i.jsx)(n.p,{children:"FastAPI automatically generates interactive API documentation. You can use this to explore and test your API."}),"\n",(0,i.jsx)(n.h3,{id:"swagger-ui",children:"Swagger UI"}),"\n",(0,i.jsxs)(n.p,{children:["Access Swagger UI at ",(0,i.jsx)(n.code,{children:"http://127.0.0.1:8000/docs"}),". It provides an interactive interface to:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"View and test your API endpoints."}),"\n",(0,i.jsx)(n.li,{children:"Check the request and response models."}),"\n",(0,i.jsx)(n.li,{children:"Easily send requests and see responses."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"redoc",children:"ReDoc"}),"\n",(0,i.jsxs)(n.p,{children:["Access ReDoc at ",(0,i.jsx)(n.code,{children:"http://127.0.0.1:8000/redoc"}),". It offers a more detailed and readable documentation format."]}),"\n",(0,i.jsx)(n.h2,{id:"step-3-handling-different-types-of-responses",children:"Step 3: Handling Different Types of Responses"}),"\n",(0,i.jsx)(n.h3,{id:"json-responses",children:"JSON Responses"}),"\n",(0,i.jsx)(n.p,{children:"FastAPI responses are typically JSON. Ensure your endpoints return data in JSON format by default."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\nclass Item(BaseModel):\n    name: str\n    price: float\n\n@app.post("/items/")\ndef create_item(item: Item):\n    return {"item": item}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"custom-status-codes",children:"Custom Status Codes"}),"\n",(0,i.jsx)(n.p,{children:"You can return custom status codes with responses:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from fastapi import HTTPException\n\n@app.get("/error")\ndef raise_error():\n    raise HTTPException(status_code=404, detail="Item not found")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"response-models",children:"Response Models"}),"\n",(0,i.jsx)(n.p,{children:"Use Pydantic models to define response schemas:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from typing import List\n\nclass UserResponse(BaseModel):\n    username: str\n    email: str\n\n@app.get("/users/", response_model=List[UserResponse])\ndef get_users():\n    return [{"username": "john", "email": "john@example.com"}]\n'})}),"\n",(0,i.jsx)(n.h2,{id:"step-4-managing-and-debugging-errors",children:"Step 4: Managing and Debugging Errors"}),"\n",(0,i.jsx)(n.h3,{id:"handling-exceptions",children:"Handling Exceptions"}),"\n",(0,i.jsx)(n.p,{children:"FastAPI allows you to handle exceptions and return appropriate responses."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from fastapi import Request\n\n@app.exception_handler(HTTPException)\nasync def http_exception_handler(request: Request, exc: HTTPException):\n    return JSONResponse(\n        status_code=exc.status_code,\n        content={"message": exc.detail},\n    )\n'})}),"\n",(0,i.jsx)(n.h3,{id:"logging-errors",children:"Logging Errors"}),"\n",(0,i.jsx)(n.p,{children:"Set up logging to capture and review errors."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import logging\n\nlogging.basicConfig(level=logging.INFO)\n\n@app.get("/items/{item_id}")\ndef read_item(item_id: int):\n    try:\n        # Simulate item retrieval\n        if item_id != 1:\n            raise ValueError("Item not found")\n        return {"item_id": item_id}\n    except Exception as e:\n        logging.error(f"Error: {e}")\n        raise HTTPException(status_code=404, detail="Item not found")\n'})}),"\n",(0,i.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsx)(n.p,{children:"In this tutorial, we explored how to interact with your FastAPI application by making various HTTP requests, utilizing interactive documentation, handling responses, and managing errors. FastAPI\u2019s automatic documentation and built-in validation features simplify working with APIs and provide a robust framework for building and interacting with APIs efficiently."}),"\n",(0,i.jsx)(n.p,{children:"In the next chapter, we will compare FastAPI with other frameworks like Django Rest Framework (DRF) to help you choose the best tool for your API needs. Stay tuned!"})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var t=s(6540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);