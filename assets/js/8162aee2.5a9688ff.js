"use strict";(self.webpackChunkmy_docusaurus_site=self.webpackChunkmy_docusaurus_site||[]).push([[8049],{7061:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>r});const t=JSON.parse('{"id":"python-guide/Advanced/Lambda_Functions/README","title":"Lambda Functions","description":"Welcome to this tutorial on using lambda functions in Python! In this lesson, we\'ll explore the basics of lambda functions, how to create them, and how to use them effectively.","source":"@site/docs/python-guide/10_Advanced/03_Lambda_Functions/README.md","sourceDirName":"python-guide/10_Advanced/03_Lambda_Functions","slug":"/python-guide/Advanced/Lambda_Functions/","permalink":"/Python/docs/python-guide/Advanced/Lambda_Functions/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/python-guide/10_Advanced/03_Lambda_Functions/README.md","tags":[],"version":"current","frontMatter":{},"sidebar":"guideSidebar","previous":{"title":"Walrus Operator","permalink":"/Python/docs/python-guide/Advanced/Walrus_Operator/"},"next":{"title":"Generators","permalink":"/Python/docs/python-guide/Advanced/Generators/"}}');var i=a(4848),s=a(8453);const l={},o="Lambda Functions",d={},r=[{value:"Introduction to Lambdas",id:"introduction-to-lambdas",level:2},{value:"Simple Lambda",id:"simple-lambda",level:3},{value:"Lambda with Multiple Parameters",id:"lambda-with-multiple-parameters",level:3},{value:"Using Lambdas in a Function",id:"using-lambdas-in-a-function",level:3},{value:"Lambda vs. Regular Function",id:"lambda-vs-regular-function",level:3},{value:"Sorting with Lambdas",id:"sorting-with-lambdas",level:3},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"lambda-functions",children:"Lambda Functions"})}),"\n",(0,i.jsx)(n.p,{children:"Welcome to this tutorial on using lambda functions in Python! In this lesson, we'll explore the basics of lambda functions, how to create them, and how to use them effectively."}),"\n",(0,i.jsx)(n.h2,{id:"introduction-to-lambdas",children:"Introduction to Lambdas"}),"\n",(0,i.jsx)(n.p,{children:"Lambdas are nameless functions that you can create on the fly. They are particularly handy for short-lived, one-time-use operations. Let's dive into some code examples."}),"\n",(0,i.jsx)(n.h3,{id:"simple-lambda",children:"Simple Lambda"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Single parameter lambda\np = lambda x: print(x)\n\n# Using the lambda\np(10)\np("hello")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"lambda-with-multiple-parameters",children:"Lambda with Multiple Parameters"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Lambda with multiple parameters\nadd = lambda a, b: a + b\n\n# Using the lambda\nresult = add(4, 5)\nprint(result)  # Output: 9\n"})}),"\n",(0,i.jsx)(n.h3,{id:"using-lambdas-in-a-function",children:"Using Lambdas in a Function"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from typing import Callable, List\n\ndef use_all(func: Callable, values: List[int]) -> None:\n    for value in values:\n        func(value)\n\n# Using the function with a lambda\nuse_all(lambda x: print(f\"{x} times 'x'\"))\n\n# Output:\n# 2 times 'x'\n# 4 times 'x'\n# 10 times 'x'\n"})}),"\n",(0,i.jsx)(n.h3,{id:"lambda-vs-regular-function",children:"Lambda vs. Regular Function"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Using a lambda\nmultiply = lambda x: print(x * 2)\nuse_all(multiply, [2, 4, 10])\n\n# Equivalent regular function\ndef multiply_func(x: int) -> None:\n    print(x * 2)\n\nuse_all(multiply_func, [2, 4, 10])\n"})}),"\n",(0,i.jsx)(n.h3,{id:"sorting-with-lambdas",children:"Sorting with Lambdas"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Sorting names by length\nnames = [\"Bob\", \"James\", \"Samantha\", \"Luigi\", \"Joe\"]\nsorted_names = sorted(names, key=lambda x: len(x.lower()))\n\nprint(sorted_names)\n# Output: ['Joe', 'Bob', 'Luigi', 'James', 'Samantha']\n"})}),"\n",(0,i.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsx)(n.p,{children:"Lambdas are powerful tools for concise and expressive coding, especially in scenarios where creating a separate function may be overkill. Consider their readability and reusability when deciding between lambdas and regular functions. Enjoy coding with lambdas!"})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>l,x:()=>o});var t=a(6540);const i={},s=t.createContext(i);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);