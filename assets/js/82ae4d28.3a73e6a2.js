"use strict";(self.webpackChunkpython=self.webpackChunkpython||[]).push([[7981],{4010:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rest-api/Building-REST-API/adding_urls","title":"Adding URLs and Using the DRF API","description":"In this tutorial, we will learn how to configure URLs for your Django Rest Framework (DRF) API and use the API endpoints to interact with your data. We will cover:","source":"@site/docs/rest-api/Building-REST-API/05_adding_urls.md","sourceDirName":"rest-api/Building-REST-API","slug":"/rest-api/Building-REST-API/adding_urls","permalink":"/Python/docs/rest-api/Building-REST-API/adding_urls","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rest-api/Building-REST-API/05_adding_urls.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"restAPISidebar","previous":{"title":"Loading and Serializing Data With DRF","permalink":"/Python/docs/rest-api/Building-REST-API/loading_serializing_drf"},"next":{"title":"Using FastAPI","permalink":"/Python/docs/rest-api/Building-REST-API/using_fastapi"}}');var r=n(4848),i=n(8453);const l={},a="Adding URLs and Using the DRF API",o={},d=[{value:"Step 1: Adding URLs with DRF Routers",id:"step-1-adding-urls-with-drf-routers",level:2},{value:"Why Use Routers?",id:"why-use-routers",level:3},{value:"Define a ViewSet",id:"define-a-viewset",level:3},{value:"Configure Routers",id:"configure-routers",level:3},{value:"Include App URLs in the Project",id:"include-app-urls-in-the-project",level:3},{value:"Step 2: Using the API with HTTP Methods",id:"step-2-using-the-api-with-http-methods",level:2},{value:"Accessing the API Endpoints",id:"accessing-the-api-endpoints",level:3},{value:"Making HTTP Requests",id:"making-http-requests",level:3},{value:"Using cURL",id:"using-curl",level:4},{value:"Using Postman",id:"using-postman",level:4},{value:"Step 3: Testing Your API",id:"step-3-testing-your-api",level:2},{value:"Writing Automated Tests",id:"writing-automated-tests",level:3},{value:"Running Tests",id:"running-tests",level:3},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"adding-urls-and-using-the-drf-api",children:"Adding URLs and Using the DRF API"})}),"\n",(0,r.jsx)(s.p,{children:"In this tutorial, we will learn how to configure URLs for your Django Rest Framework (DRF) API and use the API endpoints to interact with your data. We will cover:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Setting up URLs with DRF routers"}),"\n",(0,r.jsx)(s.li,{children:"Using the API with HTTP methods"}),"\n",(0,r.jsx)(s.li,{children:"Testing your API with tools like Postman or cURL"}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"step-1-adding-urls-with-drf-routers",children:"Step 1: Adding URLs with DRF Routers"}),"\n",(0,r.jsx)(s.h3,{id:"why-use-routers",children:"Why Use Routers?"}),"\n",(0,r.jsx)(s.p,{children:"DRF routers automatically generate URL patterns for your API viewsets. They simplify the process of creating and maintaining URLs for your API, handling common CRUD operations."}),"\n",(0,r.jsx)(s.h3,{id:"define-a-viewset",children:"Define a ViewSet"}),"\n",(0,r.jsxs)(s.p,{children:["Assuming you have already created a viewset for your model in ",(0,r.jsx)(s.code,{children:"myapp/views.py"}),", here\u2019s an example:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"from rest_framework import viewsets\nfrom .models import User\nfrom .serializers import UserSerializer\n\nclass UserViewSet(viewsets.ModelViewSet):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer\n"})}),"\n",(0,r.jsx)(s.h3,{id:"configure-routers",children:"Configure Routers"}),"\n",(0,r.jsxs)(s.p,{children:["Create a ",(0,r.jsx)(s.code,{children:"urls.py"})," file in ",(0,r.jsx)(s.code,{children:"myapp"})," (if it doesn't already exist) and set up the router to include your viewsets:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"from django.urls import path, include\nfrom rest_framework.routers import DefaultRouter\nfrom .views import UserViewSet\n\nrouter = DefaultRouter()\nrouter.register(r'users', UserViewSet)\n\nurlpatterns = [\n    path('', include(router.urls)),\n]\n"})}),"\n",(0,r.jsx)(s.h3,{id:"include-app-urls-in-the-project",children:"Include App URLs in the Project"}),"\n",(0,r.jsxs)(s.p,{children:["Include your app\u2019s URLs in the main project\u2019s ",(0,r.jsx)(s.code,{children:"urls.py"}),":"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', include('myapp.urls')),  # Include app URLs\n]\n"})}),"\n",(0,r.jsx)(s.h2,{id:"step-2-using-the-api-with-http-methods",children:"Step 2: Using the API with HTTP Methods"}),"\n",(0,r.jsx)(s.h3,{id:"accessing-the-api-endpoints",children:"Accessing the API Endpoints"}),"\n",(0,r.jsxs)(s.p,{children:["With the router set up, you can now access various endpoints for the ",(0,r.jsx)(s.code,{children:"User"})," model:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"List Users"}),": ",(0,r.jsx)(s.code,{children:"GET /api/users/"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Retrieve a User"}),": ",(0,r.jsx)(s.code,{children:"GET /api/users/{id}/"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Create a User"}),": ",(0,r.jsx)(s.code,{children:"POST /api/users/"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Update a User"}),": ",(0,r.jsx)(s.code,{children:"PUT /api/users/{id}/"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Partial Update a User"}),": ",(0,r.jsx)(s.code,{children:"PATCH /api/users/{id}/"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Delete a User"}),": ",(0,r.jsx)(s.code,{children:"DELETE /api/users/{id}/"})]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"making-http-requests",children:"Making HTTP Requests"}),"\n",(0,r.jsx)(s.h4,{id:"using-curl",children:"Using cURL"}),"\n",(0,r.jsx)(s.p,{children:"You can interact with your API using cURL from the command line. Here are some examples:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"List Users"}),":"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"curl -X GET http://localhost:8000/api/users/\n"})}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Create a User"}),":"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'curl -X POST http://localhost:8000/api/users/ -H "Content-Type: application/json" -d \'{"name": "Jane Doe", "email": "jane@example.com"}\'\n'})}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Retrieve a User"}),":"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"curl -X GET http://localhost:8000/api/users/1/\n"})}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Update a User"}),":"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'curl -X PUT http://localhost:8000/api/users/1/ -H "Content-Type: application/json" -d \'{"name": "John Smith", "email": "john.smith@example.com"}\'\n'})}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Delete a User"}),":"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"curl -X DELETE http://localhost:8000/api/users/1/\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"using-postman",children:"Using Postman"}),"\n",(0,r.jsx)(s.p,{children:"Postman is a popular API client that provides a user-friendly interface for making HTTP requests."}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Install Postman"}),": Download and install Postman from ",(0,r.jsx)(s.a,{href:"https://www.postman.com/",children:"Postman\u2019s official website"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Create a Request"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Open Postman and create a new request."}),"\n",(0,r.jsx)(s.li,{children:"Select the HTTP method (GET, POST, PUT, PATCH, DELETE)."}),"\n",(0,r.jsxs)(s.li,{children:["Enter the API endpoint URL (e.g., ",(0,r.jsx)(s.code,{children:"http://localhost:8000/api/users/"}),")."]}),"\n",(0,r.jsx)(s.li,{children:"Add headers and request body as needed."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Send Request"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:'Click the "Send" button to make the request.'}),"\n",(0,r.jsx)(s.li,{children:"Review the response returned by the API."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"step-3-testing-your-api",children:"Step 3: Testing Your API"}),"\n",(0,r.jsx)(s.h3,{id:"writing-automated-tests",children:"Writing Automated Tests"}),"\n",(0,r.jsx)(s.p,{children:"Automated tests ensure your API behaves as expected and helps prevent regressions. Django\u2019s testing framework can be used to write tests for your API."}),"\n",(0,r.jsxs)(s.p,{children:["In ",(0,r.jsx)(s.code,{children:"myapp/tests.py"}),", you can write tests using DRF\u2019s ",(0,r.jsx)(s.code,{children:"APITestCase"}),":"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"from rest_framework.test import APITestCase\nfrom rest_framework import status\nfrom .models import User\n\nclass UserAPITestCase(APITestCase):\n    def setUp(self):\n        self.user = User.objects.create(name='John Doe', email='john@example.com')\n\n    def test_list_users(self):\n        response = self.client.get('/api/users/')\n        self.assertEqual(response.status_code, status.HTTP_200_OK)\n\n    def test_create_user(self):\n        data = {'name': 'Jane Doe', 'email': 'jane@example.com'}\n        response = self.client.post('/api/users/', data, format='json')\n        self.assertEqual(response.status_code, status.HTTP_201_CREATED)\n        self.assertEqual(User.objects.count(), 2)\n\n    def test_retrieve_user(self):\n        response = self.client.get(f'/api/users/{self.user.id}/')\n        self.assertEqual(response.status_code, status.HTTP_200_OK)\n\n    def test_update_user(self):\n        data = {'name': 'John Smith', 'email': 'john.smith@example.com'}\n        response = self.client.put(f'/api/users/{self.user.id}/', data, format='json')\n        self.assertEqual(response.status_code, status.HTTP_200_OK)\n        self.user.refresh_from_db()\n        self.assertEqual(self.user.name, 'John Smith')\n\n    def test_delete_user(self):\n        response = self.client.delete(f'/api/users/{self.user.id}/')\n        self.assertEqual(response.status_code, status.HTTP_204_NO_CONTENT)\n        self.assertEqual(User.objects.count(), 0)\n"})}),"\n",(0,r.jsx)(s.h3,{id:"running-tests",children:"Running Tests"}),"\n",(0,r.jsx)(s.p,{children:"Run your tests with:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"python manage.py test\n"})}),"\n",(0,r.jsx)(s.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsx)(s.p,{children:"In this tutorial, we set up URLs for a DRF API using routers, explored how to interact with the API using HTTP methods, and tested our API with tools like cURL, Postman, and Django\u2019s testing framework. This setup allows you to create, read, update, and delete resources through your API effectively."}),"\n",(0,r.jsx)(s.p,{children:"In the next chapter, we will look into using FastAPI, another powerful option for building APIs with Python, and compare it with DRF. Stay tuned!"})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>a});var t=n(6540);const r={},i=t.createContext(r);function l(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);