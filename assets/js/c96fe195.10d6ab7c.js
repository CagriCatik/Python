"use strict";(self.webpackChunkpython=self.webpackChunkpython||[]).push([[2959],{1893:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"data-analysis/Series/accessing_elements_index","title":"Accessing Series Elements by Index in Pandas","description":"In this tutorial, we\'ll delve into accessing elements in a Pandas Series by their index. We\'ll use a practical example involving net worth data of individuals and access them using their names as indices.","source":"@site/docs/data-analysis/01_Series/09_accessing_elements_index.md","sourceDirName":"data-analysis/01_Series","slug":"/data-analysis/Series/accessing_elements_index","permalink":"/Python/docs/data-analysis/Series/accessing_elements_index","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/data-analysis/01_Series/09_accessing_elements_index.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{},"sidebar":"dataAnalysisSidebar","previous":{"title":"Accessing Elements by Position in Pandas","permalink":"/Python/docs/data-analysis/Series/accessing_elements_position"},"next":{"title":"Data Frames","permalink":"/Python/docs/category/data-frames"}}');var i=s(4848),a=s(8453);const l={},c="Accessing Series Elements by Index in Pandas",r={},d=[{value:"Introduction to Index-Based Access",id:"introduction-to-index-based-access",level:2},{value:"Setting up the Data",id:"setting-up-the-data",level:2},{value:"Accessing Elements by Index",id:"accessing-elements-by-index",level:2},{value:"Single Element Access",id:"single-element-access",level:3},{value:"Multiple Element Access",id:"multiple-element-access",level:3},{value:"Slice Notation",id:"slice-notation",level:3},{value:"Conclusion",id:"conclusion",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"accessing-series-elements-by-index-in-pandas",children:"Accessing Series Elements by Index in Pandas"})}),"\n",(0,i.jsx)(n.p,{children:"In this tutorial, we'll delve into accessing elements in a Pandas Series by their index. We'll use a practical example involving net worth data of individuals and access them using their names as indices."}),"\n",(0,i.jsx)(n.h2,{id:"introduction-to-index-based-access",children:"Introduction to Index-Based Access"}),"\n",(0,i.jsx)(n.p,{children:"In Pandas, Series objects can be accessed using indices, which can either be integer-based (default) or customized using strings, datetime objects, etc. Here, we'll focus on accessing elements via custom string-based indices."}),"\n",(0,i.jsx)(n.h2,{id:"setting-up-the-data",children:"Setting up the Data"}),"\n",(0,i.jsx)(n.p,{children:"Let's start by creating a Pandas Series with names as indices and net worth as values. Here's a snippet to set it up:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import pandas as pd\n\n# Sample data\ndata = {'Name': ['Elon Musk', 'Jeff Bezos', 'Bill Gates', 'Warren Buffett', 'Steve Ballmer'],\n        'Net Worth': [185, 177, 124, 96, 90]}\n\n# Creating a DataFrame\ndf = pd.DataFrame(data)\n\n# Setting 'Name' as index and squeezing it into a Series\nrichest = df.set_index('Name')['Net Worth'].squeeze()\n\n# Display the series\nprint(richest)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"accessing-elements-by-index",children:"Accessing Elements by Index"}),"\n",(0,i.jsx)(n.h3,{id:"single-element-access",children:"Single Element Access"}),"\n",(0,i.jsx)(n.p,{children:"To access a single element, we use the name (index) associated with it. For example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Accessing net worth of Bill Gates\nbill_gates_worth = richest['Bill Gates']\nprint(\"Net Worth of Bill Gates:\", bill_gates_worth)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"multiple-element-access",children:"Multiple Element Access"}),"\n",(0,i.jsx)(n.p,{children:"We can access multiple elements by passing a list of index names. For instance:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Accessing net worth of Bill Gates and Warren Buffett\nmultiple_net_worth = richest[['Bill Gates', 'Warren Buffett']]\nprint(\"Net Worth of Bill Gates and Warren Buffett:\", multiple_net_worth)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"slice-notation",children:"Slice Notation"}),"\n",(0,i.jsx)(n.p,{children:"Using slice notation, we can retrieve a range of elements. For example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Accessing net worth between Bill Gates and Steve Ballmer\nslice_net_worth = richest['Bill Gates':'Steve Ballmer']\nprint(\"Net Worth between Bill Gates and Steve Ballmer:\", slice_net_worth)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsx)(n.p,{children:"In this tutorial, we've explored how to access elements in a Pandas Series using customized string-based indices. We learned to access single and multiple elements, as well as a range of elements using slice notation. By mastering these techniques, you can efficiently manipulate and extract data from Series objects in Pandas."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var t=s(6540);const i={},a=t.createContext(i);function l(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);